{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZAITER\\\\Downloads\\\\REACT\\\\react101\\\\src\\\\components\\\\TopRanked\\\\TopRanked.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Top';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopRanked = ({\n  symbol = 'AAPL'\n}) => {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const apiKey = 'FFTZ06W4JZ6C7ZDS'; // Consider moving this to environment variables\n    const apiURL = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=5min&apikey=${apiKey}`;\n    fetch(apiURL).then(response => response.json()).then(data => {\n      const series = data['Time Series (5min)'];\n      if (series) {\n        const latestTime = Object.keys(series).pop();\n        const latestPrice = series[latestTime]['4. close'];\n        setPrice(latestPrice);\n      } else {\n        throw new Error('No data found');\n      }\n      setLoading(false);\n    }).catch(err => {\n      setError(err.toString());\n      setLoading(false);\n    });\n  }, [symbol]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [symbol, \" Price: $\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TopRanked, \"Vq3s2GiP9gHSEpgPY5d9Z1hot/s=\");\n_c = TopRanked;\nexport default TopRanked;\nvar _c;\n$RefreshReg$(_c, \"TopRanked\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TopRanked","symbol","_s","price","setPrice","loading","setLoading","error","setError","apiKey","apiURL","fetch","then","response","json","data","series","latestTime","Object","keys","pop","latestPrice","Error","catch","err","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZAITER/Downloads/REACT/react101/src/components/TopRanked/TopRanked.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Top'\r\nconst TopRanked = ({ symbol = 'AAPL' }) => {\r\n  const [price, setPrice] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const apiKey = 'FFTZ06W4JZ6C7ZDS'; // Consider moving this to environment variables\r\n    const apiURL = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=5min&apikey=${apiKey}`;\r\n\r\n    fetch(apiURL)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const series = data['Time Series (5min)'];\r\n        if (series) {\r\n          const latestTime = Object.keys(series).pop();\r\n          const latestPrice = series[latestTime]['4. close'];\r\n          setPrice(latestPrice);\r\n        } else {\r\n          throw new Error('No data found');\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError(err.toString());\r\n        setLoading(false);\r\n      });\r\n  }, [symbol]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  return (\r\n    <div>\r\n      <h1>{symbol} Price: ${price}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopRanked;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACd,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM,GAAG;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAG,kBAAkB,CAAC,CAAC;IACnC,MAAMC,MAAM,GAAG,0EAA0ET,MAAM,yBAAyBQ,MAAM,EAAE;IAEhIE,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,MAAM,GAAGD,IAAI,CAAC,oBAAoB,CAAC;MACzC,IAAIC,MAAM,EAAE;QACV,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,GAAG,CAAC,CAAC;QAC5C,MAAMC,WAAW,GAAGL,MAAM,CAACC,UAAU,CAAC,CAAC,UAAU,CAAC;QAClDb,QAAQ,CAACiB,WAAW,CAAC;MACvB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MACAhB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDiB,KAAK,CAACC,GAAG,IAAI;MACZhB,QAAQ,CAACgB,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;MACxBnB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAA2B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIvB,KAAK,EAAE,oBAAOR,OAAA;IAAA2B,QAAA,GAAK,SAAO,EAACnB,KAAK;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3C,oBACE/B,OAAA;IAAA2B,QAAA,eACE3B,OAAA;MAAA2B,QAAA,GAAKzB,MAAM,EAAC,WAAS,EAACE,KAAK;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnCIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}