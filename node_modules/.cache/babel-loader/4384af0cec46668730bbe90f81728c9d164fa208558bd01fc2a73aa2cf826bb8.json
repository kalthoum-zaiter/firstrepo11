{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZAITER\\\\Downloads\\\\REACT\\\\react101\\\\src\\\\components\\\\teststockinfo\\\\teststockinfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Typography, Divider, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyInfo = ({\n  ticker\n}) => {\n  _s();\n  const [companyData, setCompanyData] = useState(null);\n  useEffect(() => {\n    // Mock function to simulate data fetching\n    const fetchCompanyData = async ticker => {\n      // Replace with actual API call\n      const mockData = {\n        MAN: {\n          name: 'ManpowerGroup Inc',\n          price: '70.54',\n          targetPrice: '75.00',\n          volume: '426080',\n          marketCap: '3.28',\n          yearRange: '66.85 - 78.11',\n          dividendYield: '4.49%',\n          peRatio: '64.78'\n        },\n        AAPL: {\n          name: 'Apple Inc',\n          price: '150.54',\n          targetPrice: '160.00',\n          volume: '75080000',\n          marketCap: '2410',\n          yearRange: '120.00 - 160.00',\n          dividendYield: '0.60%',\n          peRatio: '30.28'\n        }\n        // Add more mock data as needed\n      };\n      return mockData[ticker];\n    };\n    fetchCompanyData(ticker).then(data => setCompanyData(data));\n  }, [ticker]);\n  if (!companyData) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      maxWidth: 345,\n      margin: 'auto',\n      mt: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        sx: {\n          fontWeight: 'bold',\n          mb: 2\n        },\n        children: [companyData.name, \" - Stock Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        children: [\"Price: $\", companyData.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Year Range: \", companyData.yearRange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Target Price: $\", companyData.targetPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Volume: \", companyData.volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Market Cap: $\", companyData.marketCap, \"B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        component: \"div\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Dividend Yield: \", companyData.dividendYield]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyInfo, \"fEY7csvVOHWK5190hUDCDR914Tk=\");\n_c = CompanyInfo;\nexport default CompanyInfo;\nvar _c;\n$RefreshReg$(_c, \"CompanyInfo\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Typography","Divider","CircularProgress","jsxDEV","_jsxDEV","CompanyInfo","ticker","_s","companyData","setCompanyData","fetchCompanyData","mockData","MAN","name","price","targetPrice","volume","marketCap","yearRange","dividendYield","peRatio","AAPL","then","data","fileName","_jsxFileName","lineNumber","columnNumber","container","sx","maxWidth","margin","mt","children","item","variant","component","fontWeight","mb","gutterBottom","_c","$RefreshReg$"],"sources":["C:/Users/ZAITER/Downloads/REACT/react101/src/components/teststockinfo/teststockinfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, Divider, CircularProgress } from '@mui/material';\r\n\r\nconst CompanyInfo = ({ ticker }) => {\r\n  const [companyData, setCompanyData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Mock function to simulate data fetching\r\n    const fetchCompanyData = async (ticker) => {\r\n      // Replace with actual API call\r\n      const mockData = {\r\n        MAN: {\r\n          name: 'ManpowerGroup Inc',\r\n          price: '70.54',\r\n          targetPrice: '75.00',\r\n          volume: '426080',\r\n          marketCap: '3.28',\r\n          yearRange: '66.85 - 78.11',\r\n          dividendYield: '4.49%',\r\n          peRatio: '64.78',\r\n        },\r\n        AAPL: {\r\n          name: 'Apple Inc',\r\n          price: '150.54',\r\n          targetPrice: '160.00',\r\n          volume: '75080000',\r\n          marketCap: '2410',\r\n          yearRange: '120.00 - 160.00',\r\n          dividendYield: '0.60%',\r\n          peRatio: '30.28',\r\n        },\r\n        // Add more mock data as needed\r\n      };\r\n      return mockData[ticker];\r\n    };\r\n\r\n    fetchCompanyData(ticker).then((data) => setCompanyData(data));\r\n  }, [ticker]);\r\n\r\n  if (!companyData) return <CircularProgress />;\r\n\r\n  return (\r\n    <Grid container sx={{ maxWidth: 345, margin: 'auto', mt: 5 }}>\r\n      <Grid item>\r\n        <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n          {companyData.name} - Stock Data\r\n        </Typography>\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n          Price: ${companyData.price}\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ mt: 2 }}>\r\n          Year Range: {companyData.yearRange}\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ mt: 2 }}>\r\n          Target Price: ${companyData.targetPrice}\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ mt: 2 }}>\r\n          Volume: {companyData.volume}\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ mt: 2 }}>\r\n          Market Cap: ${companyData.marketCap}B\r\n        </Typography>\r\n        <Divider />\r\n\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\" sx={{ mt: 2 }}>\r\n          Dividend Yield: {companyData.dividendYield}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CompanyInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}