{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZAITER\\\\Downloads\\\\REACT\\\\react101\\\\src\\\\App.js\";\n// AppRouter.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginForm from './components/signin/signin';\nimport Register from './pages/Register';\nimport AppRoutes from './AppRoutes';\nimport Layout from './components/Layout/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = ({\n  mode,\n  handleModeChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          sidebar: false,\n          children: /*#__PURE__*/_jsxDEV(LoginForm, {\n            mode: mode,\n            handleModeChange: handleModeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          sidebar: false,\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), AppRoutes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          sidebar: route.sidebar,\n          children: [\"  // Assuming each route config has a sidebar boolean\", /*#__PURE__*/React.cloneElement(route.element, {\n            mode: mode,\n            handleModeChange: handleModeChange\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","LoginForm","Register","AppRoutes","Layout","jsxDEV","_jsxDEV","AppRouter","mode","handleModeChange","children","path","element","sidebar","fileName","_jsxFileName","lineNumber","columnNumber","map","route","index","cloneElement","_c","$RefreshReg$"],"sources":["C:/Users/ZAITER/Downloads/REACT/react101/src/App.js"],"sourcesContent":["// AppRouter.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginForm from './components/signin/signin';\nimport Register from './pages/Register';\nimport AppRoutes from './AppRoutes';\nimport Layout from './components/Layout/Layout';\n\nconst AppRouter = ({ mode, handleModeChange }) => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <Layout sidebar={false}>\n            <LoginForm mode={mode} handleModeChange={handleModeChange} />\n          </Layout>\n        } />\n        <Route path=\"/register\" element={\n          <Layout sidebar={false}>\n            <Register />\n          </Layout>\n        } />\n        {AppRoutes.map((route, index) => (\n          <Route key={index} path={route.path} element={\n            <Layout sidebar={route.sidebar}>  // Assuming each route config has a sidebar boolean\n              {React.cloneElement(route.element, { mode: mode, handleModeChange: handleModeChange })}\n            </Layout>\n          } />\n        ))}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAiB,CAAC,KAAK;EAChD,oBACEH,OAAA,CAACR,MAAM;IAAAY,QAAA,eACLJ,OAAA,CAACP,MAAM;MAAAW,QAAA,gBACLJ,OAAA,CAACN,KAAK;QAACW,IAAI,EAAC,GAAG;QAACC,OAAO,eACrBN,OAAA,CAACF,MAAM;UAACS,OAAO,EAAE,KAAM;UAAAH,QAAA,eACrBJ,OAAA,CAACL,SAAS;YAACO,IAAI,EAAEA,IAAK;YAACC,gBAAgB,EAAEA;UAAiB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACJX,OAAA,CAACN,KAAK;QAACW,IAAI,EAAC,WAAW;QAACC,OAAO,eAC7BN,OAAA,CAACF,MAAM;UAACS,OAAO,EAAE,KAAM;UAAAH,QAAA,eACrBJ,OAAA,CAACJ,QAAQ;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACHd,SAAS,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1Bd,OAAA,CAACN,KAAK;QAAaW,IAAI,EAAEQ,KAAK,CAACR,IAAK;QAACC,OAAO,eAC1CN,OAAA,CAACF,MAAM;UAACS,OAAO,EAAEM,KAAK,CAACN,OAAQ;UAAAH,QAAA,GAAC,uDAC9B,eAACd,KAAK,CAACyB,YAAY,CAACF,KAAK,CAACP,OAAO,EAAE;YAAEJ,IAAI,EAAEA,IAAI;YAAEC,gBAAgB,EAAEA;UAAiB,CAAC,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF;MACT,GAJWG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACK,EAAA,GAxBIf,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}