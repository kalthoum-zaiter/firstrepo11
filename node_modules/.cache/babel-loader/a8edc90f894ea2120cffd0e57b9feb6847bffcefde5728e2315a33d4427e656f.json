{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZAITER\\\\Downloads\\\\REACT\\\\react101\\\\src\\\\components\\\\TickerInfo\\\\TickerInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockWidget = ({\n  symbol\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    price: '',\n    yearRange: '',\n    targetPrice: '',\n    volume: '',\n    marketCap: '',\n    dividendYield: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`https://api.example.com/stock/${symbol}`);\n        setStockData({\n          price: response.data.price,\n          yearRange: `${response.data.low} - ${response.data.high}`,\n          targetPrice: response.data.targetPrice,\n          volume: response.data.volume.toLocaleString(),\n          marketCap: response.data.marketCap,\n          dividendYield: response.data.dividendYield + '%'\n        });\n      } catch (error) {\n        console.error('Error fetching stock data', error);\n      }\n    };\n    fetchData();\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [symbol, \" - Stock Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Price: $\", stockData.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Year Range: \", stockData.yearRange]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Target Price: $\", stockData.targetPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Volume: \", stockData.volume]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Market Cap: $\", stockData.marketCap, \"B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Dividend Yield: \", stockData.dividendYield]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(StockWidget, \"II8+CAg3j6dvJnK8VbtCRfWJI+o=\");\n_c = StockWidget;\nexport default StockWidget;\nvar _c;\n$RefreshReg$(_c, \"StockWidget\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","axios","jsxDEV","_jsxDEV","StockWidget","symbol","_s","stockData","setStockData","price","yearRange","targetPrice","volume","marketCap","dividendYield","fetchData","response","get","data","low","high","toLocaleString","error","console","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","_c","$RefreshReg$"],"sources":["C:/Users/ZAITER/Downloads/REACT/react101/src/components/TickerInfo/TickerInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst StockWidget = ({ symbol }) => {\r\n  const [stockData, setStockData] = useState({\r\n    price: '',\r\n    yearRange: '',\r\n    targetPrice: '',\r\n    volume: '',\r\n    marketCap: '',\r\n    dividendYield: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.example.com/stock/${symbol}`);\r\n        setStockData({\r\n          price: response.data.price,\r\n          yearRange: `${response.data.low} - ${response.data.high}`,\r\n          targetPrice: response.data.targetPrice,\r\n          volume: response.data.volume.toLocaleString(),\r\n          marketCap: response.data.marketCap,\r\n          dividendYield: response.data.dividendYield + '%',\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching stock data', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [symbol]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">{symbol} - Stock Data</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\">Price: ${stockData.price}</Typography>\r\n            <Typography variant=\"body2\">Year Range: {stockData.yearRange}</Typography>\r\n            <Typography variant=\"body2\">Target Price: ${stockData.targetPrice}</Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\">Volume: {stockData.volume}</Typography>\r\n            <Typography variant=\"body2\">Market Cap: ${stockData.marketCap}B</Typography>\r\n            <Typography variant=\"body2\">Dividend Yield: {stockData.dividendYield}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StockWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}